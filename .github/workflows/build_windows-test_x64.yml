name: Build FFmpeg DLL (x264, MSVC -test)

on:
  workflow_dispatch:

permissions:
  contents: write  # 允许上传 Release 资产

jobs:
  build:
    runs-on: windows-latest

    env:
      FFMPEG_VERSION: n6.1
      BUILD_DIR: ${{ github.workspace }}\ffmpeg-build
      INSTALL_DIR: ${{ github.workspace }}\ffmpeg-output

    steps:
    - name: Checkout current repo
      uses: actions/checkout@v4

    - name: Setup MSVC environment
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install MSYS2 for build tools
      run: |
        choco install -y msys2

    - name: Install dependencies and setup x264
      run: |
        choco install -y nasm
        
        # 初始化MSYS2
        C:\tools\msys64\usr\bin\bash.exe -lc "pacman -Syu --noconfirm"
        C:\tools\msys64\usr\bin\bash.exe -lc "pacman -S --needed --noconfirm base-devel mingw-w64-x86_64-toolchain mingw-w64-x86_64-x264"
        
        # 创建x264目录结构
        New-Item -ItemType Directory -Force -Path "${{ github.workspace }}/x264/bin/x64/Release"
        New-Item -ItemType Directory -Force -Path "${{ github.workspace }}/x264/lib/x64/Release" 
        New-Item -ItemType Directory -Force -Path "${{ github.workspace }}/x264/include"
        
        # 使用MSYS2预编译的x264
        Copy-Item "C:\tools\msys64\mingw64\bin\libx264-*.dll" "${{ github.workspace }}/x264/bin/x64/Release/" -ErrorAction SilentlyContinue
        Copy-Item "C:\tools\msys64\mingw64\lib\libx264.dll.a" "${{ github.workspace }}/x264/lib/x64/Release/x264.lib" -ErrorAction SilentlyContinue
        Copy-Item "C:\tools\msys64\mingw64\include\x264.h" "${{ github.workspace }}/x264/include/" -ErrorAction SilentlyContinue
        Copy-Item "C:\tools\msys64\mingw64\include\x264_config.h" "${{ github.workspace }}/x264/include/" -ErrorAction SilentlyContinue
        
        # 备用：如果预编译版本不可用，下载x264头文件
        if (-not (Test-Path "${{ github.workspace }}/x264/include/x264.h")) {
          Write-Host "下载x264头文件..."
          curl -L -o x264.h https://raw.githubusercontent.com/mirror/x264/master/x264.h
          Move-Item x264.h "${{ github.workspace }}/x264/include/"
          
          # 创建简单的x264_config.h
          @"
#ifndef X264_CONFIG_H
#define X264_CONFIG_H
#define X264_BIT_DEPTH 8
#define X264_GPL 1
#define X264_INTERLACED 1
#define X264_CHROMA_FORMAT 1
#endif
"@ | Out-File -FilePath "${{ github.workspace }}/x264/include/x264_config.h" -Encoding UTF8
        }

    - name: Setup Hardware Encoder Dependencies
      run: |
        # 设置MSYS2环境
        $env:PATH = "C:\tools\msys64\usr\bin;$env:PATH"
        
        # 下载 NVIDIA Video Codec SDK (NVENC 支持)
        curl -L -o nvcodec-headers.zip https://github.com/FFmpeg/nv-codec-headers/archive/refs/heads/master.zip
        Expand-Archive -Path nvcodec-headers.zip -DestinationPath .
        cd nv-codec-headers-master
        $workspace_unix = "${{ github.workspace }}".Replace('\', '/').Replace('C:', '/c')
        C:\tools\msys64\usr\bin\bash.exe -lc "cd $workspace_unix/nv-codec-headers-master && make install PREFIX=$workspace_unix/nvcodec"
        cd ..
        
        # 下载 Intel Media SDK (QSV 支持)
        git clone --depth=1 https://github.com/Intel-Media-SDK/MediaSDK intel-media-sdk
        
        # 下载 AMD Media Framework (AMF 支持) 
        curl -L -o amf-headers.zip https://github.com/GPUOpen-LibrariesAndSDKs/AMF/archive/refs/heads/master.zip
        Expand-Archive -Path amf-headers.zip -DestinationPath .
        Rename-Item -Path "AMF-master" -NewName "amf"

    - name: Clone FFmpeg
      run: |
        git clone --depth=1 https://github.com/FFmpeg/FFmpeg -b $env:FFMPEG_VERSION ffmpeg

    - name: Configure FFmpeg for Hardware Encoders
      run: |
        cd ffmpeg
        
        # 设置MSYS2环境
        $env:PATH = "C:\tools\msys64\usr\bin;C:\tools\msys64\mingw64\bin;$env:PATH"
        
        # 设置硬件编码器环境变量
        $env:NVCODEC_PATH = "${{ github.workspace }}/nvcodec"
        $env:INTELMEDIASDKROOT = "${{ github.workspace }}/intel-media-sdk"  
        $env:AMF_PATH = "${{ github.workspace }}/amf"
        
        # 配置FFmpeg以启用硬件编码器
        $workspace_unix = "${{ github.workspace }}".Replace('\', '/').Replace('C:', '/c')
        C:\tools\msys64\usr\bin\bash.exe -lc "cd $workspace_unix/ffmpeg && ./configure --enable-shared --disable-static --enable-libx264 --enable-nvenc --enable-qsv --enable-amf --enable-cuda-nvcc --enable-cuvid --enable-d3d11va --enable-dxva2 --toolchain=msvc --arch=x86_64 --prefix=$workspace_unix/ffmpeg-output --extra-cflags='-I$workspace_unix/nvcodec/include -I$workspace_unix/intel-media-sdk/include -I$workspace_unix/amf/amf/public/include -I$workspace_unix/x264/include' --extra-ldflags='-L$workspace_unix/x264/lib/x64/Release -L/mingw64/lib' --extra-libs='-lx264'"

    - name: Build FFmpeg DLL (Release x64)
      run: |
        cd ffmpeg
        
        # 使用MSYS2环境构建
        $workspace_unix = "${{ github.workspace }}".Replace('\', '/').Replace('C:', '/c')
        
        C:\tools\msys64\usr\bin\bash.exe -lc "cd $workspace_unix/ffmpeg && make -j4"
        C:\tools\msys64\usr\bin\bash.exe -lc "cd $workspace_unix/ffmpeg && make install"

    - name: Collect DLLs, LIBs, and headers
      run: |
        # FFmpeg文件已经安装到 ffmpeg-output 目录
        # 复制x264库文件
        xcopy /Y /S x264\bin\x64\Release\*.dll ${{ github.workspace }}\ffmpeg-output\bin\
        xcopy /Y /S x264\lib\x64\Release\*.lib ${{ github.workspace }}\ffmpeg-output\lib\
        xcopy /Y /S x264\include\* ${{ github.workspace }}\ffmpeg-output\include\
        
        # 复制硬件编码器头文件
        xcopy /Y /S nvcodec\include\* ${{ github.workspace }}\ffmpeg-output\include\
        xcopy /Y /S intel-media-sdk\include\* ${{ github.workspace }}\ffmpeg-output\include\
        xcopy /Y /S amf\amf\public\include\* ${{ github.workspace }}\ffmpeg-output\include\

    - name: Archive build
      run: |
        Compress-Archive -Path ${{ github.workspace }}\ffmpeg-output\* -DestinationPath ffmpeg-hardware-encoders.zip

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: ffmpeg-hardware-encoders.zip
        tag_name: ffmpeg-hw-encoders-${{ github.run_number }}
        name: "FFmpeg with Hardware Encoders (NVENC/QSV/AMF) - Build ${{ github.run_number }}"
        body: |
          🚀 **FFmpeg with Hardware Encoders Support**
          
          包含的硬件编码器:
          - ✅ **NVIDIA NVENC** (h264_nvenc) - NVIDIA GPU 硬件编码
          - ✅ **Intel QSV** (h264_qsv) - Intel Quick Sync Video
          - ✅ **AMD AMF** (h264_amf) - AMD Media Framework
          - ✅ **x264** (libx264) - 软件编码回退
          
          支持的功能:
          - H.264 硬件编码 (NVENC/QSV/AMF)
          - H.264 软件编码 (x264)
          - CUDA 加速
          - D3D11VA/DXVA2 硬件解码
          
          **构建信息:**
          - FFmpeg 版本: 6.1
          - 平台: Windows x64 
          - 编译器: MSVC
          - 构建时间: ${{ github.event.head_commit.timestamp }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
