name: Build FFmpeg with x264 (Windows & macOS, dynamic)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Set up MSYS2 (Windows)
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          base-devel
          git
          mingw-w64-x86_64-toolchain
          nasm
          yasm
          make
          pkg-config
          mingw-w64-x86_64-x264

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install git pkg-config nasm yasm x264

    - name: Clone FFmpeg
      shell: bash
      run: |
        git clone https://git.ffmpeg.org/ffmpeg.git
        cd ffmpeg
        git checkout n7.1

    - name: Configure FFmpeg (Windows)
      if: matrix.os == 'windows-latest'
      shell: msys2 {0}
      run: |
        cd ffmpeg
        ./configure --prefix=/usr/local \
                    --target-os=mingw32 \
                    --arch=x86_64 \
                    --enable-gpl \
                    --enable-libx264 \
                    --disable-everything \
                    --enable-encoder=libx264 \
                    --enable-decoder=h264 \
                    --enable-muxer=mp4 \
                    --enable-demuxer=h264 \
                    --enable-protocol=file \
                    --enable-ffmpeg \
                    --disable-ffplay \
                    --disable-ffprobe \
                    --disable-doc \
                    --enable-shared \
                    --disable-static

    - name: Configure FFmpeg (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        cd ffmpeg
        ./configure --prefix=/usr/local \
                    --arch=x86_64 \
                    --enable-gpl \
                    --enable-libx264 \
                    --disable-everything \
                    --enable-encoder=libx264 \
                    --enable-decoder=h264 \
                    --enable-muxer=mp4 \
                    --enable-demuxer=h264 \
                    --enable-protocol=file \
                    --enable-ffmpeg \
                    --disable-ffplay \
                    --disable-ffprobe \
                    --disable-doc \
                    --enable-shared \
                    --disable-static

    - name: Build and install
      shell: bash
      run: |
        cd ffmpeg
        make -j$(nproc)
        sudo make install

    - name: Prepare output
      run: |
        mkdir -p ffmpeg-package
        cp -r /usr/local/bin ffmpeg-package/
        cp -r /usr/local/include ffmpeg-package/
        cp -r /usr/local/lib ffmpeg-package/
        if [ -d /usr/local/share/ffmpeg ]; then
          cp -r /usr/local/share/ffmpeg ffmpeg-package/presets
        fi

    - name: Compress to zip
      run: |
        zip -r ffmpeg-${{ runner.os }}-x64-x264.zip ffmpeg-package

    - name: Generate unique tag
      id: tag
      shell: bash
      run: |
        base="v$(date +'%Y.%m.%d')"
        n=1
        while git ls-remote --exit-code --tags origin "$base.$(printf '%03d' $n)" &> /dev/null; do
          n=$((n + 1))
        done
        tag="$base.$(printf '%03d' $n)"
        echo "tag=$tag" >> $GITHUB_OUTPUT

    - name: Create Git Tag
      shell: bash
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag ${{ steps.tag.outputs.tag }}
        git push origin ${{ steps.tag.outputs.tag }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: FFmpeg Release ${{ steps.tag.outputs.tag }}
        files: ffmpeg-${{ runner.os }}-x64-x264.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
